{
  "menu": {
    "home": "Home",
    "about": "About",
    "projects": "My projects",
    "contacts": "Contacts"
  },

  "user": {
    "name": "Evgenia Diakova"
  },

  "projectNav": {
    "navigation": ["Prev", "Next"]
  },

  "aboutUserInf": {
    "sectionTitles": [
      "Information About Me",
      "During training, I used the following technologies:",
      "Frameworks and Libraries",
      "Build Tools",
      "Programming Language",
      "Styling",
      "Authentication and Hosting",
      "Additional Technologies",
      "My Experience Includes:"
    ],
    "description": [
      "My journey into learning front-end development began in 2023, when I decided to radically change my profession. Before that, I worked in the economic field (accounting) for about 20 years, 9 of which were in a managerial position. Over time, my attention was drawn to web development, and I began learning this new field from scratch.",
      "I studied independently, focusing on practical application of knowledge. All my projects were reviewed and approved by a mentor — a senior front-end developer — which allowed me to receive valuable feedback and significantly improve my skills."
    ],

    "skills": {
      "frameworks": ["React", "Redux Toolkit", "Formik", "React Router"],
      "builders": ["Vite"],
      "programLang": ["JavaScript"],
      "styles": [
        "CSS Modules",
        "Flexbox",
        "Grid",
        "SASS",
        "Responsive Layout",
        "Light/Dark Theme Support"
      ],
      "authHosting": ["Firebase Auth", "Vercel", "Render"],
      "addSkills": [
        "Date-fns",
        "i18next",
        "Storybook",
        "Node.js",
        "Express",
        "REST API",
        "MongoDB",
        "Firebase",
        "fs",
        "Axios",
        "Electron.js",
        "localStorage",
        "Github"
      ]
    },

    "experience": [
      "Developing full-stack applications with well-thought-out logic, such as a timer for tracking recurring tasks and a calendar with event creation capability and Google authentication.",
      "Creating SPA and multi-page applications for practical tasks such as an online store and a country search with filters.",
      "Using Redux for efficient state management and ensuring stable UI performance.",
      "Integrating external APIs in projects such as a weather widget and applications with filtering and themes that work with real data."
    ],
    "target": "I am currently seeking a position that will allow me to apply and deepen my acquired knowledge. I am result-oriented, approach tasks responsibly, strive for continuous development, and aim to master new technologies. I have a high level of self-organization, attention to detail, and practical experience in achieving set goals.",
    "addInfo": "In the <projectLink>My Projects</projectLink> section, you will find examples of my work, which I currently consider the most interesting and representative. Each project is publicly available and can be viewed via the link provided in the project card. GitHub repositories are also available, where you can explore the architecture and code structure."
  },

  "projectPageInf": {
    "titles": "My projects"
  },

  "projectDetailsInf": {
    "links": ["Visit Website", "GitHub Repository"]
  },

  "contactInf": {
    "title": "Contact Information",
    "postcardTitle": "Send me a message",
    "placeholders": ["Preffered name", "Email address", "Message text"],
    "btnName": "Send message",
    "inputErrors": [
      "Name is required",
      "Email is required",
      "Invalid email",
      "Message is required"
    ]
  },

  "projectData": {
    "timerApp": {
      "id": "timerApp",
      "title": "Timer App (React, Node.js)",
      "description": "This is a full-stack application that allows users to create a main countdown timer and multiple linked subtimers, making it ideal for managing recurring tasks like work-rest cycles. Features include customizable timers, sound alerts (with mute option), animated visual cues, and full control over creating, editing, deleting, and selecting timers. The Timer App is available in two formats: a web application (available online) and a desktop application (installable locally).",
      "technologies": [
        "React + Vite",
        "JavaScript",
        "Module.CSS",
        "Node.js",
        "Express",
        "File system (fs) for data storage",
        "JSON-based REST API",
        "electron.js (for desktop app)"
      ],
      "website": "https://timer-app-nine-neon.vercel.app",
      "github": [
        "https://github.com/JaynDy/Timer_App.git",
        "https://github.com/JaynDy/Timer_App_Server.git"
      ]
    },
    "calendar": {
      "id": "calendar",
      "title": "Calendar (React, Node.js)",
      "description": "This is a full-stack application for time planning with different types of events, designed for use only on large screens (not for mobile devices). It allows users to log in through Google authentication. It offers 'Week' and 'Day' views. In the Calendar section, a default calendar is used, with options to change its color or create a new one. To add an event, a form with validation is filled out, including fields for start time, end time, and recurrence. Recurring events are saved as a group that can be edited or deleted. All events are displayed in a table, occupying cells based on their time.",
      "technologies": [
        "React + Vite",
        "JavaScript",
        "Module.CSS",
        "Redux",
        "Axios",
        "Firebase authentication",
        "Node.js",
        "ExpressJS",
        "MongoDB",
        "Vercel",
        "Render"
      ],
      "website": "https://calendar-ivory-eight.vercel.app",
      "github": [
        "https://github.com/JaynDy/Calendar.git",
        "https://github.com/JaynDy/Calendar_Server.git"
      ]
    },
    "onlineShopReact": {
      "id": "onlineShopReact",
      "title": "Online Shop (React)",
      "description": "The application is a single-page application with routing. It is designed for managing a shopping cart and placing orders. The user fills out two validated forms (formik), where each step is available only after completing the required fields. Data is saved when returning to previous steps. After completing the order process, a summary card is displayed, and the cart and form data are cleared.",
      "technologies": [
        "React + Vite",
        "JavaScript",
        "Module.CSS",
        "Redux",
        "Formik",
        "Vercel"
      ],
      "website": "https://online-shop-react-2xua.vercel.app",
      "github": ["https://github.com/JaynDy/Online-shop-react.git"]
    },
    "ticTacToe": {
      "id": "ticTacToe",
      "title": "Tic Tac Toe (React)",
      "description": "State management is handled using Redux Toolkit. Each game round is accompanied by messages displaying the game results. The right to move is granted to the winner. If the game ends in a draw, the right to move remains with the previous winner. Players can exchange messages. The chat updates after clicking the Reset button.",
      "technologies": [
        "React + Vite",
        "Module.CSS",
        "JavaScript",
        "Redux",
        "Flexible design",
        "Vercel"
      ],
      "website": "https://tic-tac-toe-one-xi-86.vercel.app",
      "github": ["https://github.com/JaynDy/tic_tac_toe.git"]
    },
    "onlineShop": {
      "id": "onlineShop",
      "title": "Online Shop (Vanilla js)",
      "description": "This is a multi-page app with a responsive design. For the convenience of the user, filters have been created to search for the required products, along with a price scale for the products. The user can add, edit, and remove products from the cart. The cart data is stored in the local storage.",
      "technologies": [
        "HTML",
        "CSS",
        "Grid",
        "Flexbox",
        "JavaScript",
        "Local storage",
        "Vercel"
      ],
      "website": "https://online-shop-app-nine.vercel.app/mainPage.html",
      "github": ["https://github.com/JaynDy/OnlineShop_App.git"]
    },
    "countriesApp": {
      "id": "countriesApp",
      "title": "Countries App (Vanilla js)",
      "description": "The app has a responsive layout with media queries and uses Flexbox to arrange country cards flexibly. JavaScript (ES6+) is used for searching countries, filtering by region, and switching between light and dark themes.",
      "technologies": ["HTML", "CSS", "Flexbox", "JavaScript", "API", "Vercel"],
      "website": "https://countries-app-zeta-two.vercel.app",
      "github": ["https://github.com/JaynDy/Countries_App.git"]
    },
    "weatherWidget": {
      "id": "weatherWidget",
      "title": "Weather Widget (Vanilla js)",
      "description": "This is a simple weather widget that displays the current weather for a given location. It fetches data from a weather API and displays the temperature, humidity, and weather conditions.",
      "technologies": ["HTML", "CSS", "JavaScript", "API", "Vercel"],
      "website": "https://weather-widget-pink-five.vercel.app",
      "github": ["https://github.com/JaynDy/WeatherWidget.git"]
    }
  }
}
